{"version":3,"sources":["App.tsx","components/goodsList/goodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","reverseList","setState","sortAlphabetically","ALPHABET","sortByLength","LENGTH","resetOrder","visibleGoods","sort","current","next","localeCompare","length","reverse","getReorderedGoods","this","isResetAvailable","className","type","onClick","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,mBAAqB,WACnB,EAAKD,SAAS,CACZH,SAAUT,EAASc,YAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUT,EAASgB,UApBzB,EAwBEC,WAAa,WACX,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QA3BzB,4CA+BE,WACE,IAAMQ,EA/DH,SACLhB,EADK,GAGM,IADTO,EACQ,EADRA,SAAUD,EACF,EADEA,WAENU,EAAY,YAAOhB,GAmBzB,OAjBAgB,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQZ,GACN,KAAKT,EAASc,SACZ,OAAOM,EAAQE,cAAcD,GAE/B,KAAKrB,EAASgB,OACZ,OAAOI,EAAQG,OAASF,EAAKE,OAE/B,QACE,OAAO,MAITf,GACFU,EAAaM,UAGRN,EAwCgBO,CAAkBpB,EAAiBqB,KAAKnB,OAC7D,EAAiCmB,KAAKnB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdkB,EAAmBnB,GAAcC,IAAaT,EAASU,KAE7D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASJ,KAAKb,mBACde,UAAWG,IACT,iBACA,CAAE,WAAYtB,IAAaT,EAASc,WALxC,iCAWA,wBACEe,KAAK,SACLC,QAASJ,KAAKX,aACda,UAAWG,IACT,oBACA,CAAE,WAAYtB,IAAaT,EAASgB,SALxC,4BAWA,wBACEa,KAAK,SACLC,QAASJ,KAAKf,YACdiB,UAAWG,IACT,oBACA,CAAE,YAAavB,IALnB,qBAWCmB,GACC,wBACEE,KAAK,SACLC,QAASJ,KAAKT,WACdW,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAW1B,MAAOgB,WAnF1B,GAAyBc,IAAMC,WE1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65069f8f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/goodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((current, next) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return current.localeCompare(next);\n\n      case SortType.LENGTH:\n        return current.length - next.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  resetOrder = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n    const isResetAvailable = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortAlphabetically}\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverseList}\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {isResetAvailable && (\n            <button\n              type=\"button\"\n              onClick={this.resetOrder}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}